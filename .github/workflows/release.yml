name: Release

on:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always
  CARGO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run tests
        run: cargo test --verbose

      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-

      - name: Install stable toolchain linux
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build for release linux
        run: |
          cargo build --release
          tar -C builds -czvf dist/protofetch_linux_amd64.tar.gz target/release/protofetch

      - name: Install stable toolchain mac-amd64
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-apple-darwin

      - name: Build for release mac-amd64
        run: |
          cargo build --release
          tar -C builds -czvf dist/protofetch_darwin_amd64.tar.gz target/release/protofetch

      - name: Install stable toolchain mac-arm64
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: aarch64-apple-darwin

      - name: Build for release mac-arm64
        # We would need self-hosted arm runner for the correct target - for now we use `vendored-openssl` feature on `git2-rs dependency to overcome it
        run: |
          cargo build --release # --target=aarch64-apple-darwin
          tar -C builds -czvf dist/protofetch_darwin_arm64.tar.gz target/release/protofetch

      - name: Install stable toolchain win64
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-gnu

      - name: Build for release win64
        run: |
          cargo build --release
          tar -C builds -czvf dist/protofetch-win64.tar.gz target/release/protofetch

      - name: Install stable toolchain win32
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: i686-pc-windows-gnu

      - name: Build for release win64
        run: |
          cargo build --release
          tar -C builds -czvf dist/protofetch-win32.tar.gz target/release/protofetch          
          

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/protofetch-win64.tar.gz
            dist/protofetch-win32.tar.gz
            dist/protofetch_linux_amd64.tar.gz
            dist/protofetch_darwin_amd64.tar.gz
            dist/protofetch_darwin_arm64.tar.gz
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-apple-darwin

      - name: Publish cargo package
        run: cargo publish --token ${{ env.CARGO_TOKEN }}

      - name: Publish npm package
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ".npmrc"
          npm publish