name: Release

on:
  push:
    tags: [ 'v*.*.*' ]

env:
  CARGO_TERM_COLOR: always
  CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Run tests
        run: cargo test --verbose

  release-linux:
    runs-on: ubuntu-latest
    needs: tests
    strategy:
      matrix:
        target: [ aarch64-unknown-linux-musl, x86_64-unknown-linux-musl ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install rust toolchain target
        run: rustup target add ${{ matrix.target }}

      - name: Install cross
        run: |
          cargo install --locked cross

      - name: Build
        run: cross build --release --target ${{ matrix.target }}

      - name: Package
        run: |
          mv target/${{ matrix.target }}/release bin/
          tar -czvf protofetch_${{ matrix.target }}.tar.gz bin/protofetch

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            protofetch_${{ matrix.target }}.tar.gz

  release-mac:
    runs-on: macos-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build --release
      
      - name: Package
        run: |
          mv target/release bin/
          tar -czvf protofetch_darwin_amd64.tar.gz bin/protofetch

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            protofetch_darwin_amd64.tar.gz

  release-windows:
    runs-on: windows-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build --release
      
      - name: Package
        run: |
          mv target/release bin/
          tar -czvf protofetch_win64.tar.gz bin/protofetch.exe

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            protofetch_win64.tar.gz

  npm-release:
    runs-on: ubuntu-latest
    needs: [ release-mac, release-linux, release-windows, tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish npm package
        run: |
          VERSION=$(sed -n -e '/version/ s/.* = *//p' "Cargo.toml" | head -1 | tr -d '"')
          export VERSION
          # Tee had issue to write to the same file which is used for read so creating a temp package.json file
          mv .github/npm/package.json .github/npm/package.json.temp
          sed "s/VERSION#TO#REPLACE/${VERSION}/g" .github/npm/package.json.temp |  tee .github/npm/package.json
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ".npmrc"
          npm publish .github/npm

  crates-io:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish cargo package
        run: cargo publish --token ${{ env.CRATES_IO_TOKEN }}
